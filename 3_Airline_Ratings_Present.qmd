---
title: "Airline_Ratings"
format: revealjs
editor: visual
author: Shuchao Cui
---

```{r setup, include=FALSE}
# knitr::opts_chunk$set(echo = FALSE)
# renv::snapshot()
install.packages(c("tidyverse","ggplot2","dplyr","GGally","gapminder","png","sf","maps","rnaturalearth","ggthemes","vcd","psych","corrplot","tm","wordcloud"))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(GGally)
library(gapminder)
library(png)
library(GGally)
library(sf)
library(maps)
library(rnaturalearth)
library(ggthemes)
library(vcd)
library(psych)
library(corrplot)
library(tm)
library(wordcloud)

# renv::restore()
# renv::hydrate()
```

```{r}
# options(error = NULL) 
ratings_raw <- read.csv("data/Airline_Reviews.csv")
#price <- read.csv("data/Flight_Price.csv")

```

```{r}
theme_set(theme_bw(base_size = 12))
```

## Glimpse of data

Datasets on Kaggle, from <https://www.airlinequality.com/>

The second dataset about "price" was verified invalid in the analysis procedure

```{r}
glimpse(ratings_raw)
#glimpse(price)
```

## Discovery 1.1 Distribution over Time

The data lasts to Feb 2023

```{r}
# Modify date column
ratings <- ratings_raw |> 
  separate(DatePub," ",into=c("Date","Month","Year")) |> 
  rename("CabinServiceRating" = "ServiceRating",
         "ValueforMoneyRating" = "ValueRating") |> 
  na.omit()

# Distribution over time  
ratings |> 
  ggplot() +
  aes(y=Year) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si()) +
  labs(x="n_samples",y="year")
```

## Discovery 1.2 Distribution over CabinType

```{r}
# Distribution over CabinType
ratings |>
  ggplot() +
  aes(y=fct_infreq(CabinType)) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si())
```

## Discovery 1.2 Rating Trend over CabinType

```{r}
ratings |> 
  filter(Year >= 2013) |> 
  group_by(Year,CabinType) |> 
  summarise(avg_score=mean(OverallScore,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=CabinType) +
  geom_line(aes(group=CabinType)) +
  geom_point(size=2)
```

## Discovery 1.3 Distribution over TravelType

```{r}
# Distribution over Travel Type
ratings |>
  ggplot() +
  aes(y=fct_infreq(TravelType)) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si())
```

## Discovery 1.3 Rating Trend over TravelType

```{r}
ratings |> 
  filter(Year >= 2013) |> 
  group_by(Year,TravelType) |> 
  summarise(avg_score=mean(OverallScore,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=TravelType) +
  geom_line(aes(group=TravelType)) +
  geom_point(size=2)
```

## Discovery 1.4 Distribution over Departure Continent

```{r}
# Distribution on continent. Discover in a fast way with â€œgapminder".
gapminder <- gapminder |> 
  mutate(country_fixed = str_replace_all(country,"\\s","")) #eliminate spaces

left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  ggplot() +
  aes(y=fct_infreq(continent)) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si()) +
  labs(y="Departure",x="",subtitle="clean and join the country column with third-party dataset")
```

## Discovery 1.4 Rating Trend over Departure Continent

```{r}
left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  filter(Year >= 2013) |> 
  group_by(Year,continent) |> 
  summarise(avg_score=mean(OverallScore,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=continent) +
  geom_line(aes(group=continent)) +
  geom_point(size=2) +
  labs(color="departure")
```

## Discovery 1.5 Distribution over European Countries

```{r}
# Explore further in Europe
left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  filter(continent=="Europe") |> 
  ggplot() +
  aes(y=fct_infreq(OriginCountry)) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si()) +
  labs(x="",y="departure")
```

## Discovery 1.5 Rating Trend over European Countries

```{r}
left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  filter(continent=="Europe") |> 
  filter(Year >= 2013) |> 
  filter(OriginCountry %in% c("UnitedKingdom","Germany","Netherlands","France","Switzerland","Italy","Spain"
                              # ,"Ireland","Belgium","Sweden","Greece","Austria","Denmark"
                              )) |> 
  group_by(Year,OriginCountry) |> 
  summarise(avg_score=mean(OverallScore,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=OriginCountry) +
  geom_line(aes(group=OriginCountry)) +
  geom_point(size=2) +
  labs(color="departure")
```

## Discovery 1.6 Distribution over Asian Countries

```{r}
# Look deeper in Asia
left_join(ratings,distinct(select(gapminder,country,continent)),join_by(OriginCountry==country)) |>
  filter(continent=="Asia") |> 
  ggplot() +
  aes(y=fct_infreq(OriginCountry)) +
  geom_bar() +
  scale_x_continuous(labels=scales::label_number_si())
```

## Discovery 1.6 Rating Trend over Asian Countries

```{r}
left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  filter(continent=="Asia") |> 
  filter(Year >= 2013) |> 
  filter(OriginCountry %in% c("India","Singapore","Thailand","China","Indonesia","Malaysia","Philippines"
                              # ,"Japan","Israel","Vienam","Taiwan","Kuwait","Pakistan"
                              )) |> 
  group_by(Year,OriginCountry) |> 
  summarise(avg_score=mean(OverallScore,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=OriginCountry) +
  geom_line(aes(group=OriginCountry)) +
  geom_point(size=2) +
  labs(color="departure")
```

## Discovery 1.6 Rating of different Services

Departure from China

```{r}
left_join(ratings,distinct(select(gapminder,country_fixed,continent)),join_by(OriginCountry==country_fixed)) |>
  filter(OriginCountry=="China") |> 
  filter(Year >= 2013) |> 
  pivot_longer(cols = contains("Rating"),
               names_to = "service_type",
               values_to = "Rating",
               names_pattern = "(.*)Rating") |>
  group_by(Year,service_type) |> 
  summarise(avg_score=mean(Rating,na.rm=TRUE)) |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_score,color=service_type) +
  geom_line(aes(group=service_type)) +
  geom_point(size=2)
```

## Data Preparation 2.1 Data Filter

Departures from Europe with Economy Class Reviews over the Last Ten Years

```{r}
ratings <- ratings_raw |> 
  separate(DatePub," ",into=c("Date","Month","Year")) |> 
  rename("CabinServiceRating" = "ServiceRating",
         "ValueforMoneyRating" = "ValueRating") |> 
  na.omit()

# European countries
european_countries <- 
c("Albania","Andorra","Armenia","Austria","Azerbaijan","Belarus","Belgium","Bosnia and Herzegovina","Bulgaria","Croatia","Cyprus","Czech Republic","Denmark","Estonia","Finland","France","Georgia","Germany","Greece","Hungary","Iceland","Ireland","Italy","Kosovo","Latvia","Liechtenstein","Lithuania","Luxembourg","Malta","Moldova","Monaco","Montenegro","Netherlands","North Macedonia","Norway","Poland","Portugal","Romania","Russia","San Marino","Serbia","Slovakia","Slovenia","Spain","Sweden","Switzerland","Turkey","Ukraine","UnitedKingdom", "VaticanCity")

# filter European flight, Economy Class, in the past ten years
ratings_euro <- ratings  |>
  filter(OriginCountry %in% european_countries,
         Year>=2013,
         CabinType=='Economy Class') |> 
  relocate("unique_id","AirlineName","Aircraft","CabinType","Year","Month","Date",
           "TravelType","Route",
           "Recommended","OverallScore",
           contains("Rating"))
glimpse(ratings_euro)
```

## Data Preparation 2.2 Find out the Invalid Questionnaires

Recommend Decision and Overall Score

```{r}
# compute recommend rate
ratings_euro |>
  group_by(AirlineName) |>
  summarise(recommend_rate=sum(Recommended=="yes")/n(), # recommend rate
         avg_overallscore=mean(OverallScore)) |>
  na.omit() |> 
  ggplot() +
  geom_point(aes(x=recommend_rate,y=avg_overallscore),color="darkblue") +
  labs(title="Relations between Recommended Rate and Rating Score",
       subtitle = "by airline") +
  theme(panel.grid.major.y = element_blank(),
  panel.grid.major.x = element_line(size = 0.5),
  plot.caption = element_text(face = "italic"),
  strip.text = element_text(face = "bold"),
  plot.caption.position = "plot") +
  scale_x_continuous(labels = scales::percent)
```

## Data Preparation 2.2 Find out the Invalid Questionnaires

Will use OverallScore only as the "dependent variable"

Could use OverallScore and Recommended to find out the invalid survey

```{r}
#Will use "overallscore" only, because overallscore and recommend rate are all the same.
p_test <- ratings_euro |> 
  select(Recommended, OverallScore) |> 
  na.omit()

x <- ifelse(p_test$Recommended == "yes", 1, 0)
y <- p_test$OverallScore

cor_result <- cor.test(x, y, method = "pearson")
print(cor_result)
```

## Data Preparation 2.2 Find out the Invalid Questionnaires

Throw:

\(1\) Score \> 5 & Recommended="no"

\(2\) Score \< 5 & Recommended="yes"

```{r}
#Apply labels to the data indicating opposing responses between OverallScore and the recommended decision.
ratings_euro_dataclean <- ratings_euro |> 
  mutate(data_clean=(case_when(
    (OverallScore > 5 & Recommended == "no") ~ 0,
    (OverallScore < 5 & Recommended == "yes") ~ 0,
    TRUE ~ 1
  )))

# 2.5% of the whole data are "invalid questionnaires"
ratings_euro_dataclean |> filter(data_clean==0) |> count() /
  ratings_euro_dataclean |> count()

# throw invalid data
ratings_euro_fixed <- filter(ratings_euro_dataclean,data_clean==1)
```

## Data Preparation 2.3 Test Collinearity of 8 Ratings

ggpairs is not the best way due to the discrete nature

Notice: Overall Rating is "0-10" originally.

```{r}
ratings_euro_fixed_longer <- ratings_euro_fixed |> 
  mutate(OverallRating=OverallScore/2,na.rm=TRUE) |> #change overallscore to 0-5
  pivot_longer(cols = contains("Rating"),
               names_to = "service_type",
               values_to = "Rating",
               names_pattern = "(.*)Rating") |>
  group_by(service_type) |> 
  summarise(avg_Rating=mean(Rating,na.rm=TRUE)) |> 
  na.omit()

ratings_euro_fixed_longer |> 
  ggplot() +
  aes(y=reorder(service_type,avg_Rating),x=avg_Rating) +
  geom_bar(stat="identity") +
  geom_text(aes(label = round(avg_Rating, 2)), hjust = 1.5) +
  labs(y="Service_Type")
```

## Data Preparation 2.3 Test Collinearity of 8 Ratings

overall, valueforMoney, SeatComfort, CabinService are in obvious correlation.

```{r}
#overall, valueforMoney, SeatComfort, CabinService are in obvious correlation.
data <- ratings_euro_fixed |> 
  mutate(OverallRating=OverallScore/2,na.rm=TRUE) |>
  select(contains("Rating")) |> 
  rename_with(~ gsub("Rating", "", .), contains("Rating"))
data <- na.omit(data)

cor_matrix <- cor(data, method = "spearman")

cor_colors <- colorRampPalette(c("#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"))(200)

corrplot(cor_matrix, method = "color", col = cor_colors, type = "lower", order = "hclust", tl.col = "black", tl.srt = 30,tl.cex = 0.7)
title("cor_matrix_Spearman",adj=1)
```

## Analysis 3.1 The proportion of services by different airlines

```{r}
# Flight provided by top 20 airlines
Plot_Airline_Flight <- ratings_euro_fixed |>
  group_by(AirlineName) |>
  summarise(n=n()) |>
  mutate(sum=sum(n),
         p=n/sum) |> 
  mutate(Airline=fct_lump_n(factor(AirlineName),w=n,n=20)) |> 
  ggplot() +
  aes(y=reorder(Airline,n),x=n) +
  geom_bar(stat="identity") +
  geom_text(aes(label=ifelse(Airline=="Other","",sprintf("%.2f%%", p*100)),hjust=-0.5)) +
  labs(y="Airline_Flight",x="")

# Add the total percentage of the top 20 airline services into the plot
percentage_top20 <- ratings_euro_fixed |>
  group_by(AirlineName) |>
  summarise(n=n()) |>
  mutate(sum=sum(n),
         p=n/sum) |> 
  mutate(Airline=fct_lump_n(factor(AirlineName),w=n,n=20)) |> 
  filter(Airline!="Other") |> summarise(percentage_top20=round(sum(p),4))

Plot_Airline_Flight + 
  geom_text(aes(label = paste("Sum of these top 20: ", percentage_top20*100, "%")),
            x = 1, y = 2, vjust = -13,hjust=-1)

```

## Analysis 3.2 Ratings of top 20 airlines

```{r}
# Ratings of top 20 airlines
n_top20 <- ratings_euro_fixed |>
  group_by(AirlineName) |>
  summarise(n=n()) |>
  mutate(sum=sum(n),
         p=n/sum) |> 
  mutate(Airline=fct_lump_n(factor(AirlineName),w=n,n=20)) |> 
  filter(Airline!="Other") |> 
  select(Airline) |> 
  distinct()

ratings_euro_airlines <- ratings_euro_fixed |> 
  filter(AirlineName %in% n_top20$Airline,Year>=2021) |>
  mutate(OverallRating=OverallScore/2) |>
  group_by(AirlineName) |>
  summarise(across(contains("Rating"),
                   list(mean))) |> 
  rename_with(~gsub("_1", "", .), everything()) |> 
  relocate("AirlineName","OverallRating") |> 
  pivot_longer(contains("Rating"),
               names_to = "Service_Type",
               values_to = "Rating",
               names_pattern = "(.*)Rating") 

ratings_euro_airlines
```

## Analysis 3.3 Ratings of top 20 airlines

After 2021

**Qatar Airways, Jet2.com, easyJet, and Ryanair** received higher ratings across various aspects

```{r}
ratings_euro_airlines |>
  ggplot() +
  aes(x = Service_Type, y = reorder(AirlineName,Rating), fill = Rating) +
  geom_tile() +
  scale_fill_viridis_c(limits = c(0, 5),breaks = seq(0, 5, 1)) +
  theme(axis.text.x = element_text(angle = 20, hjust = 1)) +
  labs(y="",x="")
```

## Analysis 3.3 Ratings in FR, GE, UK, IT

After 2021

```{r}
# Distribution on Airlines&Countries.
ratings_euro_airlines_countries <- ratings_euro_fixed |> 
  filter(AirlineName %in% n_top20$Airline,Year>=2021) |> 
  mutate(OverallRating=OverallScore/2) |> 
  group_by(AirlineName,OriginCountry) |>
  summarise(across(contains("Rating"),
                   list(mean))) |>
  rename_with(~gsub("_1", "", .), everything()) |> 
  relocate("AirlineName","OverallRating") |> 
  pivot_longer(contains("Rating"),
               names_to = "Service_Type",
               values_to = "Rating",
               names_pattern = "(.*)Rating") |> 
  ungroup()

# Heatmap of Countries as sample
ratings_euro_airlines_countries |> 
  filter(OriginCountry %in% c("France","Germany","UnitedKingdom","Italy")) |> 
  ggplot() +
  aes(x = Service_Type, y = reorder(AirlineName,Rating), fill = Rating) +
  geom_tile(size=5) +
  facet_wrap(~OriginCountry) +
  scale_fill_viridis_c(limits = c(0, 5),breaks = seq(0, 5, 1)) +
  theme(axis.text.x=element_text(angle=20,hjust=1,size=6),
        axis.text.y=element_text(size=6)) +
  labs(y="",x="")
```

## Analysis 3.3 Ratings in FR, GE, UK, IT

France: Jet2.com, Qatar, KLM Royal Dutch

Germany: SAS Scandinavian, Vueling,

Italy: TAP Portugal, Aer Lingus, Qatar

UK: Aegean

## Analysis 3.4 One glance at Luxembourg

```{r}
# Heatmap of Countries as sample
ratings_euro_airlines_countries |> 
  filter(OriginCountry == "Luxembourg") |> 
  ggplot() +
  aes(x = Service_Type, y = reorder(AirlineName,Rating), fill = Rating) +
  geom_tile(size=5) +
  facet_wrap(~OriginCountry) +
  scale_fill_viridis_c(limits = c(0, 5),breaks = seq(0, 5, 1)) +
  theme(axis.text.x=element_text(angle=20,hjust=1,size=6),
        axis.text.y=element_text(size=6))

```

## Analysis 4.1 Rating over Past 10 Years

```{r}
# Vionlin on all years
ratings_euro_fixed |> 
  ggplot() + 
  aes(x=">=2013",y=OverallScore,fill = "Year >= 2013") +
  geom_violin(alpha=0.7,scale="width") +
  theme(legend.position = "none") +
  labs(x="") +
  scale_fill_brewer(palette = "Set4")
```

## Analysis 4.1 Rating Trend

Starting from 2018, high ratings have been gradually decreasing.

```{r}
ratings_euro_fixed |> 
  ggplot() + 
  aes(x=Year,y=OverallScore,fill = Year) +
  geom_violin(alpha=0.4,scale="width") +
  theme(legend.position = "none") +
  labs(x="") +
  scale_fill_brewer(palette = "Set4")

```

## Analysis 4.2 over Type of Services

ValueforMoney Rating kept decreasing

CabinService, SeatComfort hit the bottom in 2020

```{r}
fixed_Rating <- ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  mutate(OverallRating=OverallScore/2,na.rm=TRUE) |> 
  pivot_longer(cols = contains("Rating"),
               names_to = "service_type",
               values_to = "Rating",
               names_pattern = "(.*)Rating") |>
  group_by(Year,service_type) |> 
  summarise(avg_Rating=mean(Rating,na.rm=TRUE),.groups="drop") |> 
  na.omit()

fixed_Rating |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=service_type) +
  geom_line(aes(group=service_type)) +
  geom_point(size=2)
```

## Analysis 4.3 over Travel Type

```{r}
fixed_TravelType <- ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  mutate(OverallRating=OverallScore/2,na.rm=TRUE) |> 
  group_by(Year,TravelType) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),.groups="drop") |> 
  na.omit()
  
fixed_TravelType |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=TravelType) +
  geom_line(aes(group=TravelType)) +
  geom_point(size=2)
```

## Analysis 4.4 over Airline Companies

```{r}
# List all the airline companies in descending order on their reiews amount
Airline_service_scale <- ratings_euro_fixed |>
  group_by(AirlineName) |>
  summarise(n=n()) |>
  arrange(desc(n))

n_top5 <- Airline_service_scale |> slice(1:5)
n_top6_10 <- Airline_service_scale |> slice(6:10)
n_top11_15 <- Airline_service_scale |> slice(11:15)
n_top16_20 <- Airline_service_scale |> slice(16:20)

Airline_service_scale
```

## Analysis 4.4 over Airline Companies

top 5:

```{r}
# top 5
ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  filter(AirlineName %in% n_top5$AirlineName) |> 
  mutate(OverallRating=OverallScore/2) |> 
  group_by(Year,AirlineName) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),.groups="drop") |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=AirlineName) +
  geom_line(aes(group=AirlineName)) +
  geom_point(size=2) +
  labs(title="Top 5 Airline Rating Trend")
```

## Analysis 4.4 over Airline Companies

top 5:

Ryanair didn't show significant impact.

British Airways improved in 2018 and 2019 but faced challenges after COVID-19.

Lufthansa experienced a continuous decline.

## Analysis 4.4 over Airline Companies

top 6-10

```{r}
# top 6-10
ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  filter(AirlineName %in% n_top6_10$AirlineName) |> 
  mutate(OverallRating=OverallScore/2) |> 
  group_by(Year,AirlineName) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),.groups="drop") |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=AirlineName) +
  geom_line(aes(group=AirlineName)) +
  geom_point(size=2) +
  labs(title="Top 6-10 Airline Rating Trend")
```

## Analysis 4.4 over Airline Companies

top 11-15

```{r}
# top 11-15
ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  filter(AirlineName %in% n_top11_15$AirlineName) |> 
  mutate(OverallRating=OverallScore/2) |> 
  group_by(Year,AirlineName) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),.groups="drop") |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=AirlineName) +
  geom_line(aes(group=AirlineName)) +
  geom_point(size=2) +
  labs(title="Top 6-10 Airline Rating Trend")
```

## Analysis 4.4 over Airline Companies

top 16-20

```{r}
# top 16-20
ratings_euro_fixed |> 
  filter(Year>=2016) |> 
  filter(AirlineName %in% n_top16_20$AirlineName) |> 
  mutate(OverallRating=OverallScore/2) |> 
  group_by(Year,AirlineName) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),.groups="drop") |> 
  na.omit() |> 
  ggplot() +
  aes(x=Year,y=avg_Rating,color=AirlineName) +
  geom_line(aes(group=AirlineName)) +
  geom_point(size=2) +
  labs(title="Top 6-10 Airline Rating Trend")
```

## Analysis 4.5 over different countries

Greece, Switzerland decreased a lot

```{r}
top_countries <- ratings_euro_fixed |>
  group_by(OriginCountry) |> 
  summarise(n=n()) |>   
  arrange(desc(n)) |> 
  slice(1:10)
  
ratings_euro_fixed |> 
  filter(OriginCountry %in% top_countries$OriginCountry) |> 
  mutate(OverallRating=OverallScore/2) |>
  mutate(Type_Year=case_when(Year>=2019 ~ "after 2018",
                   TRUE ~ "Before 2018")) |> 
  group_by(Type_Year,OriginCountry) |> 
  summarise(avg_Rating=mean(OverallRating,na.rm=TRUE),n=n(),.groups="drop") |> 
  na.omit() |> 
  ggplot() +
  aes(x=OriginCountry,y=avg_Rating,fill=Type_Year) +
  geom_bar(stat = "identity",position = position_dodge(width = 0.8)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x="")

#I want to represent the difference as a geom_line in the plot, but I'm not sure how to achieve that. 

```

## Analysis 5 Concerns of Customers Who didn't Recommend <!--#  -->

```{r}
# text <- ratings_euro_fixed |> 
#   filter(Recommended=="no") 
# data_text <- text$Review
```

```{r}
# corpus <- Corpus(VectorSource(data_text))
# 
# corpus <- tm_map(corpus, content_transformer(tolower))
# corpus <- tm_map(corpus, removePunctuation)
# corpus <- tm_map(corpus, removeNumbers)
# corpus <- tm_map(corpus, removeWords, stopwords("en"))
# corpus <- tm_map(corpus, stripWhitespace)
# 
# dtm <- DocumentTermMatrix(corpus)
# 
# word_freq <- as.data.frame(as.matrix(dtm))
# 
# word_freq <- colSums(word_freq)
# 
# wordcloud(words = names(word_freq), freq = word_freq, min.freq = 1, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))

# couldn't work at this moment...
```
